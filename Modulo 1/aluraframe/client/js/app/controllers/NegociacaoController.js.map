{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_negociacoesView","NegociacoesView","_listaNegociacoes","Bind","ListaNegociacoes","_mensagemView","MensagemView","_mensagem","Mensagem","_init","ConnectionFactory","getConnection","then","NegociacaoDao","connection","dao","listaTodos","negociacoes","forEach","adiciona","negociacao","catch","console","log","erro","texto","setInterval","importaNegociacoes","coluna","inverteOrdem","ordena","a","b","serviceNegociacao","NegociacaoService","obterNegociacoes","filter","some","JSON","stringify","negociacoesView","itemResultadoArray","error","event","preventDefault","_criaNegociacao","_limpaFormulario","apagaTodos","result","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n  constructor() {\r\n    let $ = document.querySelector.bind(document);\r\n    this._inputData = $(\"#data\");\r\n    this._inputQuantidade = $(\"#quantidade\");\r\n    this._inputValor = $(\"#valor\");\r\n    this._ordemAtual = \"\";\r\n\r\n    this._negociacoesView = new NegociacoesView($(\"#negociacoesView\"));\r\n    this._listaNegociacoes = new Bind(\r\n      new ListaNegociacoes(), //Meu modelo\r\n      this._negociacoesView, //Minha view\r\n      [\"adiciona\", \"esvazia\", \"ordena\", \"inverteOrdem\"] // Executa a associação quando? Quando  ['adiciona','esvazia'] forem chamados\r\n    );\r\n\r\n    this._mensagemView = new MensagemView($(\"#mensagemView\"));\r\n    this._mensagem = new Bind(new Mensagem(), this._mensagemView, [\"texto\"]);\r\n\r\n     this._init()\r\n  }\r\n\r\n  _init() {\r\n    //Primeiro preciso da minha conexão com o Banco IndexDB\r\n    ConnectionFactory.getConnection()\r\n      .then(connection => new NegociacaoDao(connection))\r\n      .then(dao => dao.listaTodos())\r\n      .then(negociacoes =>\r\n        negociacoes.forEach(negociacao =>\r\n          this._listaNegociacoes.adiciona(negociacao)\r\n        )\r\n      )\r\n      .catch(erro => {\r\n        console.log(erro);\r\n        this._mensagem.texto = erro;\r\n      });\r\n\r\n    //Adicionado no Constructor NegociacaoController()\r\n    //Para ficar vendo se tem novas negociacoes de 3 em 3 segundos\r\n    setInterval(() => {\r\n      this.importaNegociacoes();\r\n    }, 3000);\r\n  }\r\n\r\n  ordena(coluna) {\r\n    if (this._ordemAtual == coluna) {\r\n      // inverte a ordem da lista!\r\n      this._listaNegociacoes.inverteOrdem();\r\n    } else {\r\n      this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n    }\r\n    this._ordemAtual = coluna;\r\n  }\r\n\r\n  importaNegociacoes() {\r\n    let serviceNegociacao = new NegociacaoService();\r\n    serviceNegociacao\r\n      .obterNegociacoes()\r\n      .then(negociacoes =>\r\n        negociacoes.filter(\r\n          negociacao =>\r\n            !this._listaNegociacoes.negociacoes.some(\r\n              negociacoesView =>\r\n                JSON.stringify(negociacao) == JSON.stringify(negociacoesView)\r\n            )\r\n        )\r\n      )\r\n      .then(negociacoes => {\r\n        negociacoes.forEach(itemResultadoArray =>\r\n          this._listaNegociacoes.adiciona(itemResultadoArray)\r\n        );\r\n        this._mensagem.texto = \"Negociações obtidas com sucesso!\";\r\n      })\r\n      .catch(error => this._mensagem.texto = error);\r\n  }\r\n\r\n  adiciona(event) {\r\n    event.preventDefault();\r\n\r\n    ConnectionFactory.getConnection()\r\n      .then(connection => {\r\n        new NegociacaoDao(connection)\r\n          .adiciona(this._criaNegociacao())\r\n          .then(() => {\r\n            this._listaNegociacoes.adiciona(this._criaNegociacao());\r\n            this._mensagem.texto = \"Negociação adicionada com sucesso\";\r\n            this._limpaFormulario();\r\n          });\r\n      })\r\n      .catch(erro => this._mensagem.texto = erro);\r\n  }\r\n\r\n  apaga() {\r\n    try {\r\n      ConnectionFactory.getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.apagaTodos())\r\n        .then(result => {\r\n          this._mensagem.texto = result;\r\n          this._listaNegociacoes.esvazia();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this._mensagem.texto = error;\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  _criaNegociacao() {\r\n    return new Negociacao(\r\n      DateHelper.textoParaData(this._inputData.value),\r\n      parseInt(this._inputQuantidade.value),\r\n      parseFloat(this._inputValor.value)\r\n    );\r\n  }\r\n\r\n  //O método começa com o _ para indicar que é um método privado, pois não faz sentido ele ser chamado externamente,\r\n  //Pois ele será usado dentro do método adiciona.\r\n  _limpaFormulario() {\r\n    this._inputData.value = \"\";\r\n    this._inputQuantidade.value = \"1\";\r\n    this._inputValor.value = 0.0;\r\n\r\n    this._inputData.focus(); // Para dar o foco no campo\r\n  }\r\n}\r\n"]}