{"version":3,"sources":["../../app-es6/services/HttpService0.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","dado","setRequestHeader","pare","console","log","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;4BAEEC,G,EAAI;AACJ,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AAC/B;AACA,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;;AAEA;AACA;AACA;AACA;AACAD,oBAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEAI,oBAAIG,kBAAJ,GAAyB,YAAM;AACvB;AACA;AACA,wBAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACrB;AACA,4BAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAqB;AACjB;AACA;AACAP,oCAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,yBAJD,MAIK;AACDT,mCAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,iBAbL;AAcIR,oBAAIS,IAAJ;AACX,aAzBM,CAAP;AA0BH;;;6BAEIb,G,EAAKc,I,EAAK;AACX,mBAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEnC,oBAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,oBAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;;AAEAI,oBAAIW,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAX,oBAAIG,kBAAJ,GAAyB,YAAM;AAC3B,wBAAGH,IAAIG,kBAAJ,IAA0B,CAA7B,EAA+B;AAC5B,4BAAGH,IAAIK,MAAJ,IAAc,GAAjB,EAAqB;AACjBP,oCAAQQ,KAAKM,IAAL,CAAUZ,IAAIQ,YAAd,CAAR;AACH,yBAFD,MAEK;AACDT,mCAAOC,IAAIQ,YAAX;AACH;AACH;AACJ,iBARD;AASAK,wBAAQC,GAAR,CAAYJ,IAAZ;AACAV,oBAAIS,IAAJ,CAASH,KAAKS,SAAL,CAAeL,IAAf,CAAT;AACJ,aAjBM,CAAP;AAkBH","file":"HttpService0.js","sourcesContent":["class HttpService {\r\n\r\n    get(url){\r\n        return new Promise((resolve,reject) => {\r\n                //Fazendo uma chamada Ajax assincrona\r\n                let xhr = new XMLHttpRequest();\r\n\r\n                //Abrindo  um endereço\r\n                //Passar Verbo\r\n                //Passar o EndPoint\r\n                //Só não estou passando URL http://servidor.com porque o servico e o site estão no mesmo servidor\r\n                xhr.open('GET', url);\r\n\r\n                xhr.onreadystatechange = () => {\r\n                        //Se o estado for igual a 4 - a requisição foi concluida e tem uma resposta\r\n                        //Porém eu não posso confiar só nesse estado, pois as vezes o servidor respondeu erro e mesmo assim é uma requisição válida\r\n                        if (xhr.readyState == 4) {\r\n                            //Só posso confiar se o status for 200 Http - OK\r\n                            if(xhr.status == 200){\r\n                                //adicionando a lista de negociacoes no callback\r\n                                //error, ListaNegociacoes\r\n                                resolve(JSON.parse(xhr.responseText));\r\n                            }else{\r\n                                reject(xhr.responseText);\r\n                            }\r\n                        }\r\n                    };\r\n                    xhr.send();\r\n        });\r\n    }\r\n\r\n    post(url, dado){\r\n        return new Promise((resolve, reject) => {\r\n\r\n             let xhr = new XMLHttpRequest();\r\n             xhr.open(\"POST\", url, true);\r\n             \r\n             xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n             xhr.onreadystatechange = () => {\r\n                 if(xhr.onreadystatechange == 4){\r\n                    if(xhr.status == 200){\r\n                        resolve(JSON.pare(xhr.responseText));\r\n                    }else{\r\n                        reject(xhr.responseText);\r\n                    }\r\n                 }\r\n             };\r\n             console.log(dado);\r\n             xhr.send(JSON.stringify(dado));\r\n        });\r\n    }\r\n}\r\n\r\n"]}