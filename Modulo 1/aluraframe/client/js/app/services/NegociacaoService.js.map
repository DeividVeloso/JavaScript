{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Negociacao","Date","objeto","data","quantidade","valor","console","log"],"mappings":";;;;;;IAAMA,iB;AAEF,iCAAa;AAAA;;AACT;AACA;AACA,aAAKC,KAAL,GAAa,IAAIC,WAAJ,EAAb;AACH;;;;2CAEiB;AACd,mBAAOC,QAAQC,GAAR,CAAY,CACf,KAAKC,wBAAL,EADe,EAEf,KAAKC,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAIJC,IAJI,CAIC,oBAAY;;AAEhB,oBAAIC,cAAcC,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,2BAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,iBADM,EACqC,EADrC,CAAlB;;AAGA,uBAAOJ,WAAP;AAEH,aAXM,EAWJM,KAXI,CAWE,gBAAQ;AACb,sBAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AACH,aAbM,CAAP;AAcH;;;mDAEuB;;AAElB,mBAAQ,KAAKhB,KAAL,CAAWiB,GAAX,CAAe,oBAAf,EACLV,IADK,CACA,uBAAe;AACjB;AACA;AACA,uBAAQC,YACHU,GADG,CACC;AAAA,2BAAU,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iBADD,CAAR;AAEH,aANK,EAOLV,KAPK,CAOC,gBAAQ;AACP;AACAW,wBAAQC,GAAR,CAAYV,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,iDAAV,CAAN;AACC,aAXH,CAAR;AAYG;;;2DAGyB;;AAE3B,mBAAO,KAAKf,KAAL,CAAWiB,GAAX,CAAe,sBAAf,EACLV,IADK,CACA,uBAAe;AACjB,uBAAQC,YACHU,GADG,CACC;AAAA,2BAAU,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iBADD,CAAR;AAEH,aAJK,EAKLV,KALK,CAKC,gBAAQ;AACVW,wBAAQC,GAAR,CAAYV,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,iDAAV,CAAN;AACI,aARH,CAAP;AASE;;;4DAE0B;;AAE7B,mBAAQ,KAAKf,KAAL,CAAWiB,GAAX,CAAe,uBAAf,EACLV,IADK,CACA,uBAAe;AACjB,uBAAOC,YACFU,GADE,CACE;AAAA,2BAAU,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,iBADF,CAAP;AAEH,aAJK,EAKLV,KALK,CAKC,gBAAQ;AACVW,wBAAQC,GAAR,CAAYV,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,iDAAV,CAAN;AACI,aARH,CAAR;AAUL","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService{\r\n\r\n    constructor(){\r\n        //Como a classe NegociacaoService agora depende de HttpService\r\n        //é uma boa declarar essa dependência no construtor da classe\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n  obterNegociacoesDaSemana(){\r\n       \r\n          return  this._http.get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                //Vem uma lista do tipo object, estou transformando para o tipo new Negociacao\r\n                //Como vai me retornar uma nova lista, tenho que passar para o resolver para ser consumido no NegociacaoController\r\n                return (negociacoes\r\n                    .map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            })\r\n            .catch(erro => {\r\n                    //Logar mensagem de baixo nivel\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações da semana')\r\n                    })\r\n            };\r\n       \r\n\r\n    obterNegociacoesDaSemanaAnterior(){\r\n         \r\n           return this._http.get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return (negociacoes\r\n                    .map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            })\r\n            .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error('Não foi possível obter as negociações da semana')\r\n                    })\r\n            };\r\n    \r\n    obterNegociacoesDaSemanaRetrasada(){\r\n           \r\n          return  this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return(negociacoes\r\n                    .map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            })\r\n            .catch(erro => {\r\n                 console.log(erro);\r\n                 throw new Error('Não foi possível obter as negociações da semana')\r\n                    })\r\n            \r\n    };\r\n}\r\n"]}